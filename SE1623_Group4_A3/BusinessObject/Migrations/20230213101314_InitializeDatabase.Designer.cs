// <auto-generated />
using System;
using BusinessObject;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BusinessObject.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20230213101314_InitializeDatabase")]
    partial class InitializeDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BusinessObject.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("CategoryId");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Category 1"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Category 2"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "Category 3"
                        },
                        new
                        {
                            CategoryId = 4,
                            CategoryName = "Category 4"
                        },
                        new
                        {
                            CategoryId = 5,
                            CategoryName = "Category 5"
                        });
                });

            modelBuilder.Entity("BusinessObject.Member", b =>
                {
                    b.Property<int>("MemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MemberId"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MemberId");

                    b.ToTable("Member");

                    b.HasData(
                        new
                        {
                            MemberId = 1,
                            City = "LA",
                            CompanyName = "Microsoft",
                            Country = "America",
                            Email = "member1@gmail.com",
                            Password = "P@ssword12345"
                        },
                        new
                        {
                            MemberId = 2,
                            City = "Hanoi",
                            CompanyName = "Vingroup",
                            Country = "Vietnam",
                            Email = "member2@gmail.com",
                            Password = "P@ssword12345"
                        });
                });

            modelBuilder.Entity("BusinessObject.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<decimal>("Freight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("RequiredDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ShippedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("OrderId");

                    b.HasIndex("MemberId");

                    b.ToTable("Order");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            Freight = 10m,
                            MemberId = 1,
                            OrderDate = new DateTime(2023, 2, 13, 17, 13, 14, 386, DateTimeKind.Local).AddTicks(3559),
                            RequiredDate = new DateTime(2023, 2, 20, 17, 13, 14, 386, DateTimeKind.Local).AddTicks(3567),
                            ShippedDate = new DateTime(2023, 2, 20, 17, 13, 14, 386, DateTimeKind.Local).AddTicks(3570)
                        },
                        new
                        {
                            OrderId = 2,
                            Freight = 10m,
                            MemberId = 1,
                            OrderDate = new DateTime(2023, 2, 13, 17, 13, 14, 386, DateTimeKind.Local).AddTicks(3571),
                            RequiredDate = new DateTime(2023, 2, 20, 17, 13, 14, 386, DateTimeKind.Local).AddTicks(3571),
                            ShippedDate = new DateTime(2023, 2, 20, 17, 13, 14, 386, DateTimeKind.Local).AddTicks(3572)
                        },
                        new
                        {
                            OrderId = 3,
                            Freight = 10m,
                            MemberId = 1,
                            OrderDate = new DateTime(2023, 2, 13, 17, 13, 14, 386, DateTimeKind.Local).AddTicks(3573),
                            RequiredDate = new DateTime(2023, 2, 20, 17, 13, 14, 386, DateTimeKind.Local).AddTicks(3573),
                            ShippedDate = new DateTime(2023, 2, 20, 17, 13, 14, 386, DateTimeKind.Local).AddTicks(3574)
                        },
                        new
                        {
                            OrderId = 4,
                            Freight = 10m,
                            MemberId = 1,
                            OrderDate = new DateTime(2023, 2, 13, 17, 13, 14, 386, DateTimeKind.Local).AddTicks(3574),
                            RequiredDate = new DateTime(2023, 2, 20, 17, 13, 14, 386, DateTimeKind.Local).AddTicks(3575),
                            ShippedDate = new DateTime(2023, 2, 20, 17, 13, 14, 386, DateTimeKind.Local).AddTicks(3575)
                        },
                        new
                        {
                            OrderId = 5,
                            Freight = 10m,
                            MemberId = 2,
                            OrderDate = new DateTime(2023, 2, 13, 17, 13, 14, 386, DateTimeKind.Local).AddTicks(3576),
                            RequiredDate = new DateTime(2023, 2, 20, 17, 13, 14, 386, DateTimeKind.Local).AddTicks(3576),
                            ShippedDate = new DateTime(2023, 2, 20, 17, 13, 14, 386, DateTimeKind.Local).AddTicks(3577)
                        },
                        new
                        {
                            OrderId = 6,
                            Freight = 10m,
                            MemberId = 2,
                            OrderDate = new DateTime(2023, 2, 13, 17, 13, 14, 386, DateTimeKind.Local).AddTicks(3599),
                            RequiredDate = new DateTime(2023, 2, 20, 17, 13, 14, 386, DateTimeKind.Local).AddTicks(3600),
                            ShippedDate = new DateTime(2023, 2, 20, 17, 13, 14, 386, DateTimeKind.Local).AddTicks(3600)
                        },
                        new
                        {
                            OrderId = 7,
                            Freight = 10m,
                            MemberId = 2,
                            OrderDate = new DateTime(2023, 2, 13, 17, 13, 14, 386, DateTimeKind.Local).AddTicks(3601),
                            RequiredDate = new DateTime(2023, 2, 20, 17, 13, 14, 386, DateTimeKind.Local).AddTicks(3601),
                            ShippedDate = new DateTime(2023, 2, 20, 17, 13, 14, 386, DateTimeKind.Local).AddTicks(3602)
                        });
                });

            modelBuilder.Entity("BusinessObject.OrderDetail", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<double>("Discount")
                        .HasColumnType("float");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("money");

                    b.HasKey("OrderId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetail", (string)null);

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            ProductId = 1,
                            Discount = 0.29999999999999999,
                            Quantity = 10,
                            UnitPrice = 100m
                        },
                        new
                        {
                            OrderId = 1,
                            ProductId = 2,
                            Discount = 0.29999999999999999,
                            Quantity = 10,
                            UnitPrice = 100m
                        },
                        new
                        {
                            OrderId = 2,
                            ProductId = 1,
                            Discount = 0.29999999999999999,
                            Quantity = 10,
                            UnitPrice = 100m
                        },
                        new
                        {
                            OrderId = 2,
                            ProductId = 2,
                            Discount = 0.29999999999999999,
                            Quantity = 10,
                            UnitPrice = 100m
                        },
                        new
                        {
                            OrderId = 3,
                            ProductId = 1,
                            Discount = 0.29999999999999999,
                            Quantity = 10,
                            UnitPrice = 100m
                        });
                });

            modelBuilder.Entity("BusinessObject.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("money");

                    b.Property<int>("UnitsInStock")
                        .HasColumnType("int");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Product", (string)null);

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = 1,
                            ProductName = "Product A",
                            UnitPrice = 100m,
                            UnitsInStock = 100,
                            Weight = 0.0
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 2,
                            ProductName = "Product B",
                            UnitPrice = 100m,
                            UnitsInStock = 100,
                            Weight = 0.0
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 3,
                            ProductName = "Product C",
                            UnitPrice = 100m,
                            UnitsInStock = 100,
                            Weight = 0.0
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryId = 4,
                            ProductName = "Product D",
                            UnitPrice = 100m,
                            UnitsInStock = 100,
                            Weight = 0.0
                        },
                        new
                        {
                            ProductId = 5,
                            CategoryId = 5,
                            ProductName = "Product E",
                            UnitPrice = 100m,
                            UnitsInStock = 100,
                            Weight = 0.0
                        });
                });

            modelBuilder.Entity("BusinessObject.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("User");
                });

            modelBuilder.Entity("BusinessObject.Order", b =>
                {
                    b.HasOne("BusinessObject.Member", "Member")
                        .WithMany("Orders")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");
                });

            modelBuilder.Entity("BusinessObject.OrderDetail", b =>
                {
                    b.HasOne("BusinessObject.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("FK_OrderDetail_Order");

                    b.HasOne("BusinessObject.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK_OrderDetail_Product");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("BusinessObject.Product", b =>
                {
                    b.HasOne("BusinessObject.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("BusinessObject.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("BusinessObject.Member", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("BusinessObject.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("BusinessObject.Product", b =>
                {
                    b.Navigation("OrderDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
